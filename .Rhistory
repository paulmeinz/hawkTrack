shiny::runApp()
load('cohorts.rdata')
cohorts <- unique(cohorts$acad_year[cohorts$term == 1])
cohorts
runApp()
runApp()
load('cohorts.rdata')
names(cohorts)
cohorts$foster
cohorts$veteran
cohorts$dsps
names(cohorts)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help("toggle")
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(toggle)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(hawkTrackHelp)
shiny::runApp()
runApp()
library(hawkTrackHelp)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
help(order)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load('cohorts.rdata')
names(cohorts)
library(dplyr)
setwd("S:/ResearchOffice/Data Requests/CurrentProjects/Cohort Tracker")
data <- read.csv('datasetfinal.csv', na.strings = 'NULL', stringsAsFactors = F)
# degree seeking
degreeseek <- data %>%
filter((Math == 1 | English == 1) & cumunits >= 6) %>%
select(emplid) %>%
mutate(degreeseek = 1)
degreeseek <- unique(degreeseek)
# Two year pathway
twoyear <- data %>%
filter(term == 1 & English == 1 & Math == 1 & comprehensive == 1 &
hasmajor == 1 & comprehensive == 1 & units >= 15 &
Goal %in% c('Transfer to 4-Year- no AA/AS',
'Transfer to 4-Year after AA/AS',
'Earn a Voc Degree- no Transfer',
'Earn AA/AS Degree- no Transfer')) %>%
select(emplid) %>%
mutate(twoyear = 1)
twoyear <- unique(twoyear)
# three or more pathway
threeyear <- data %>%
filter(term == 1 & (English == 1 | Math == 1) & comprehensive == 1 &
hasmajor == 1 & comprehensive == 1 & units < 15 & units >= 6 &
Goal %in% c('Transfer to 4-Year- no AA/AS',
'Transfer to 4-Year after AA/AS',
'Earn a Voc Degree- no Transfer',
'Earn AA/AS Degree- no Transfer')) %>%
select(emplid) %>%
mutate(threeyear = 1)
threeyear <- unique(threeyear)
# certificate pathway
cert <- data %>%
filter(term == 1 &
hasmajor == 1 & comprehensive == 1 & cipunits >= 3 &
Goal %in% c('Earn a Certificate')) %>%
select(emplid) %>%
mutate(cert = 1)
cert <- unique(cert)
# Calc GPA and left join
data <- data %>%
left_join(degreeseek) %>%
left_join(twoyear) %>%
left_join(threeyear) %>%
left_join(cert) %>%
mutate(gpa = num/den) %>%
mutate(gpapred = ifelse(is.nan(gpa), 0, gpa))
data$Goal <- ifelse(data$Goal %in% c('Transfer to 4-Year- no AA/AS',
'Transfer to 4-Year after AA/AS',
'Earn a Certificate',
'Earn a Voc Degree- no Transfer',
'Earn AA/AS Degree- no Transfer'), 1, 0)
# Make variables into factors
data$Goal <- as.factor(data$Goal)
data$English <- as.factor(data$English)
data$Math <- as.factor(data$Math)
data$cumTransMath <- as.factor(data$cumTransMath)
data$cumTransEnglish <- as.factor(data$cumTransEnglish)
data$hasmajor <- as.factor(data$hasmajor)
data$comprehensive <- as.factor(data$comprehensive)
data$compever <- as.factor(data$compever)
cohorts <- data
save(cohorts, file = 'cohorts.rdata')
load('cohorts.rdata')
names(cohorts)
shiny::runApp('~/Code/hawkTrack')
runApp('~/Code/hawkTrack')
runApp('~/Code/hawkTrack')
runApp('~/Code/hawkTrack')
runApp('~/Code/hawkTrack')
runApp('~/Code/hawkTrack')
shiny::runApp('~/Code/hawkTrack')
runApp('~/Code/hawkTrack')
shiny::runApp('~/Code/hawkTrack')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
